name: Hermes Client Build

on:
  workflow_dispatch:

jobs:
  build-armbian:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Fetch Armbian Build
        run: git clone https://github.com/armbian/build

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            device-tree-compiler \
            qemu-user-static \
            binfmt-support \
            qemu-system-arm \
            qemu-efi-aarch64 \
            qemu-utils
          
          # 启用 binfmt 支持以进行交叉编译
          sudo systemctl restart systemd-binfmt

      - name: Setup QEMU for cross compilation
        run: |
          # 确保 QEMU 静态链接支持正确安装
          sudo apt-get install -y qemu-user-static
          
          # 手动注册binfmt处理器
          echo ':qemu-aarch64:M::\x7fELF\x02\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\xb7\x00:\xff\xff\xff\xff\xff\xff\xff\x00\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff:/usr/bin/qemu-aarch64-static:F' | sudo tee /proc/sys/fs/binfmt_misc/register
          
          # 验证 QEMU 支持
          which qemu-aarch64-static || echo "QEMU aarch64 not found"
          
      - name: Setup userpatches structure
        run: |
          # 首先创建Armbian构建目录的userpatches结构
          mkdir -p build/userpatches/config/boards
          mkdir -p build/userpatches/overlay
          
          # 将项目的userpatches内容复制到Armbian构建目录
          if [ -d "userpatches" ]; then
            cp -r userpatches/* build/userpatches/
          fi
          
          # 创建Sogou E1板级配置文件
          cat > build/userpatches/config/boards/sogou_e1.conf << 'EOL'
          # Sogou E1 board configuration
          BOARD_NAME="Sogou E1"
          BOARDFAMILY="rockchip64"
          BOOTCONFIG="rk3308-evb_defconfig"
          KERNEL_TARGET="current"
          BOOT_FDT_FILE="rockchip/rk3308-sogou-e1.dtb"
          SERIALCON="ttyS2:1500000"
          HAS_VIDEO_OUTPUT="yes"
          
          # 音频设备相关包
          PACKAGE_LIST_BOARD="alsa-utils firmware-realtek firmware-brcm80211 wireless-regdb wpasupplicant hostapd iw"
          EOL

      - name: Setup device tree
        run: |
          # 如果存在自定义设备树文件，则处理设备树
          if [ -f userpatches/extracted.dts ]; then
            echo "发现自定义设备树文件，正在处理..."
            
            # 确保设备树文件格式正确
            cp userpatches/extracted.dts build/userpatches/rk3308-sogou-e1.dts
            
            echo "自定义设备树已准备完成，Armbian将自动处理DTB编译"
          else
            echo "未找到自定义DTS文件，将使用RK3308默认配置"
          fi

      - name: Build Armbian image
        run: |
          cd build
          
          # 尝试使用更兼容的构建方式
          # 如果原生交叉编译失败，使用Docker方式
          ./compile.sh \
            BOARD=sogou_e1 \
            BRANCH=current \
            RELEASE=bookworm \
            BUILD_MINIMAL=yes \
            BUILD_DESKTOP=no \
            KERNEL_CONFIGURE=no \
            COMPRESS_OUTPUTIMAGE=sha,img \
            USE_CCACHE=no || \
          ./compile.sh docker \
            BOARD=sogou_e1 \
            BRANCH=current \
            RELEASE=bookworm \
            BUILD_MINIMAL=yes \
            BUILD_DESKTOP=no \
            KERNEL_CONFIGURE=no \
            COMPRESS_OUTPUTIMAGE=sha,img \
            USE_CCACHE=no 

      - name: Upload image
        uses: actions/upload-artifact@v4
        with:
          name: armbian-rk3308-e1
          path: |
            build/output/images/*.img
            build/output/images/*.img.sha